// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Recommendations.Client.Entities
{
    using System.Linq;

    /// <summary>
    /// A line parsing erroriInformation
    /// </summary>
    public partial class LineParsingError
    {
        /// <summary>
        /// Initializes a new instance of the LineParsingError class.
        /// </summary>
        public LineParsingError() { }

        /// <summary>
        /// Initializes a new instance of the LineParsingError class.
        /// </summary>
        /// <param name="file">The name and relative path of the file
        /// containing the error line</param>
        /// <param name="line">The error line number</param>
        /// <param name="error">Gets the error reason. Possible values
        /// include: 'MalformedLine', 'MissingFields', 'BadTimestampFormat',
        /// 'BadWeightFormat', 'MalformedCatalogItemFeature',
        /// 'ItemIdTooLong', 'IllegalCharactersInItemId', 'UserIdTooLong',
        /// 'IllegalCharactersInUserId', 'UnknownItemId'</param>
        public LineParsingError(string file = default(string), long? line = default(long?), Error? error = default(Error?))
        {
            File = file;
            Line = line;
            Error = error;
        }

        /// <summary>
        /// Gets or sets the name and relative path of the file containing the
        /// error line
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "file")]
        public string File { get; set; }

        /// <summary>
        /// Gets or sets the error line number
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "line")]
        public long? Line { get; set; }

        /// <summary>
        /// Gets the error reason. Possible values include: 'MalformedLine',
        /// 'MissingFields', 'BadTimestampFormat', 'BadWeightFormat',
        /// 'MalformedCatalogItemFeature', 'ItemIdTooLong',
        /// 'IllegalCharactersInItemId', 'UserIdTooLong',
        /// 'IllegalCharactersInUserId', 'UnknownItemId'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "error")]
        public Error? Error { get; set; }

    }
}
